//replace the last few lines of Main.java with the following code
//The max is 25000 else will exceed memory of heap.
//There are solutions to fix this, by making the heap size bigger

long start = System.nanoTime();
    Array_Shortest_Path g = new Array_Shortest_Path(); 
    g.algo_dijkstra(graph, 0);
    long end = System.nanoTime();
    long elapsedTime = end - start;
	  System.out.println("In nanoseconds : "+elapsedTime);
    double elapsedTimeInSecond = (double) elapsedTime / 1000000000;
    System.out.println("In seconds: "+elapsedTimeInSecond);

/*
        System.out.println("The weighted value for each node: ");
        for(int i=0;i<size;i++) {
          for(int j=0;j<size;j++) {
            System.out.print(graph[i][j]+" ");
          }
          System.out.println();
        }    
 */

    scan.close();


//java -d64 -Xms8g -Xmx8g entryGate
/35000 is the max I tested